name: Build

on: [push]
#on:
#  release:
#    types: [created]

jobs:
  build:
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    name: ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2

    - uses: jiro4989/setup-nim-action@v1
      with:
        nim-version: '1.4.6'
        no-color: true

    - name: Set Environment Variables
      uses: allenevans/set-env@v1.0.0
      with:
        MAIN_MODULE:           "src/plz.nim"
        PACKAGE_NAME:          "plz"
        TWINE_USERNAME:        ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD:        ${{ secrets.PYPI_PASSWORD }}
        PACKAGE_VERSION:       ${{ steps.vars.outputs.sha_short }}
        TWINE_NON_INTERACTIVE: 1
        ACTIONS_ALLOW_UNSECURE_COMMANDS: true

   - name: Nimble Install dependencies
      run: |
        nimble -y refresh
        nimble -y install requirementstxt

    - name: Compile Debug  # Compile and run to check if its working
      run: nim c --out:plz ${{ env.MAIN_MODULE }}

    - name: Run  # Compile and run to check if its working
      if: runner.os == 'Linux' || runner.os == 'macOS'
      run: |
        ./plz --help
        ./plz --version
        ./plz --license
        ./plz --dump
        ./plz completion
        ./plz latestversion pip
        ./plz install setuptools twine>=3.2.0 pip==20.1.1
